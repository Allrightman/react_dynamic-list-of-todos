{"version":3,"sources":["api/api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/users.js","App.jsx","api/todos.js","index.js"],"names":["request","url","options","fetch","then","response","ok","Error","status","statusText","json","result","data","TodoList","todos","onUserIdSelected","selectedUserId","useState","query","setQuery","type","setType","visibleTodos","filter","todo","title","toLowerCase","includes","completed","className","value","placeholder","onChange","event","target","map","id","userId","key","classNames","checked","readOnly","onClick","button","CurrentUser","userClear","user","setUser","useEffect","getUser","name","email","phone","App","setTodos","setUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3676016.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst BASE_URL = `https://mate-api.herokuapp.com`;\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './TodoList.scss';\n\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  onUserIdSelected,\n  selectedUserId,\n}) => {\n  const [query, setQuery] = useState('');\n  const [type, setType] = useState('all');\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleTypeChange = (event) => {\n    setType(event.target.value);\n  };\n\n  const visibleTodos = todos\n    .filter(todo => todo.title)\n    .filter(todo => todo.title.toLowerCase().includes(query))\n    .filter((todo) => {\n      if (type === 'active') {\n        return !todo.completed;\n      }\n\n      if (type === 'completed') {\n        return todo.completed;\n      }\n\n      return todo;\n    });\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      {'Search: '}\n      <input\n        type=\"text\"\n        value={query}\n        placeholder=\"Enter a title\"\n        onChange={handleQueryChange}\n      />\n\n      <select\n        value={type}\n        onChange={handleTypeChange}\n      >\n        <option>Choose todos</option>\n        <option value=\"all\">All</option>\n        <option value=\"active\">Active</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {visibleTodos.map(({ id, title, userId, completed }) => (\n            <li\n              key={id}\n              className={classNames('TodoList__item', {\n                'TodoList__item--checked': completed,\n                'TodoList__item--unchecked': !completed,\n              })}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={completed}\n                  readOnly\n                />\n                <p>{title}</p>\n              </label>\n\n              {userId && (\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    onUserIdSelected(userId);\n                  }}\n                  className={classNames({\n                    'TodoList__user-button': true,\n                    button: true,\n                    'TodoList__user-button--selected':\n                      selectedUserId === userId,\n                  })}\n                >\n                  {`User #${userId}`}\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({}),\n  ).isRequired,\n\n  onUserIdSelected: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\n\nimport './CurrentUser.scss';\n\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/users';\n\nexport const CurrentUser = ({ userId, userClear }) => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>{`Selected user: ${userId}`}</span>\n      </h2>\n\n      {!user ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n        </>\n      )}\n\n      <button\n        onClick={userClear}\n        type=\"button\"\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n\nCurrentUser.propTypes = {\n  userClear: PropTypes.func.isRequired,\n  userId: PropTypes.number.isRequired,\n};\n","import { request } from './api';\n\nexport const getUser = userId => request(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\n\nimport './App.scss';\nimport './styles/general.scss';\n\nimport { getTodos } from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [selectedUserId, setUserId] = useState(0);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const userClear = () => setUserId(0);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          onUserIdSelected={setUserId}\n          selectedUserId={selectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              userClear={userClear}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { request } from './api';\n\nexport const getTodos = () => request('/todos');\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}